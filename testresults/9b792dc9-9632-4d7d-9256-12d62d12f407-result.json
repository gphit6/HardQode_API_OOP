{"name": "test_create_ID_Pet", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http://91.210.171.73:8080/api/pet/", "trace": "self = <tests.test_PetDemoProject_api.Test_Pets object at 0x00000231C7085E50>\n\n    @allure.description(\"Создание животного\")\n    def test_create_ID_Pet(self):\n>       Pet_Demo_api.post_Pet()\n\ntests\\test_PetDemoProject_api.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\API_Pets.py:59: in post_Pet\n    response_post_pet_ID.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Response [404]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http://91.210.171.73:8080/api/pet/\n\nC:\\Users\\shumo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\requests\\models.py:1021: HTTPError"}, "description": "Создание животного", "attachments": [{"name": "stdout", "source": "6763fcc2-1348-40c9-b776-29e8804510d3-attachment.txt", "type": "text/plain"}], "start": 1696766081884, "stop": 1696766082707, "uuid": "e235abad-ca92-4eb4-b869-3ac6b954861c", "historyId": "03dbfdf66c0d6590404dca22d096b0e1", "testCaseId": "075d0da44b0638a845424f14e3f8337a", "fullName": "tests.test_PetDemoProject_api.Test_Pets#test_create_ID_Pet", "labels": [{"name": "epic", "value": "Управление животными"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_PetDemoProject_api"}, {"name": "subSuite", "value": "Test_Pets"}, {"name": "host", "value": "LAPTOP-DQ0BFIQ6"}, {"name": "thread", "value": "34360-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_PetDemoProject_api"}]}